#Author: Miguel Nunes
#mail: miguel.nunes@
#date: August, 2024
#Description: Accounts treatment for NOVA/ISEG/ISCTE/Católica
# Clear the environment
rm(list = ls())
#Necessary Packages
#install.packages("dplyr")
library(dplyr)
#install.packages("stringi")
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("summarytools")
library(summarytools)
setwd("C:/Users/Miguel Nunes/Desktop/merge/2015")
source("functions.R")
# Define a list of university names and corresponding filenames
universities <- c("nova", "catolica_lsbe", "iscte","iseg","univ_catolica","iscte_bshool")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin/temp_data'
#Clean the Profile Name and Basic corrections
##############################################
# Loop through each university
for (university in universities) {
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(name_corr,processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
}
View(process_data_for_correction)
#Author: Miguel Nunes
#mail: miguel.nunes@
#date: August, 2024
#Description: Accounts treatment for NOVA/ISEG/ISCTE/Católica
# Clear the environment
rm(list = ls())
#Necessary Packages
#install.packages("dplyr")
library(dplyr)
#install.packages("stringi")
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("summarytools")
library(summarytools)
setwd("C:/Users/Miguel Nunes/Desktop/merge/2015")
source("functions.R")
# Define a list of university names and corresponding filenames
universities <- c("nova", "catolica_lsbe", "iscte","iseg","univ_catolica","iscte_bshool")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin/temp_data'
#Clean the Profile Name and Basic corrections
##############################################
# Loop through each university
for (university in universities) {
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(name_corr,processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
}
source("C:/Users/Miguel Nunes/Desktop/merge/2015/1.Data_Cleaning_Linkedin.R", echo=TRUE)
university <- nova
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
View(data)
university <- catolica_lsbe
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
university <- iscte
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
university <- iscte
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
university <- iseg
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
university <- univ_catolica
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
university <- iscte_bshool
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
for (university in universities) {
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
rm(name_corr,data)
}
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
dat <- vroom(csv_filename)
install.packages("vroom")
#Author: Miguel Nunes
#mail: miguel.nunes@
#date: August, 2024
#Description: Accounts treatment for NOVA/ISEG/ISCTE/Católica
# Clear the environment
rm(list = ls())
#Necessary Packages
#install.packages("dplyr")
library(dplyr)
#install.packages("stringi")
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("summarytools")
library(summarytools)
#install.packages("vroom")
library(vroom)
setwd("C:/Users/Miguel Nunes/Desktop/merge/2015")
source("functions.R")
# Define a list of university names and corresponding filenames
universities <- c("nova", "catolica_lsbe", "iscte","iseg","univ_catolica","iscte_bshool")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin/temp_data'
university <- nova
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
dat <- vroom(csv_filename)
# If you see the parsing issues error:
problems(dat)
university <- nova
university <- "nova"
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
dat <- vroom(csv_filename)
setwd(basedir)
setwd(base_dir)
university
university <- "nova"
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
dat <- vroom(csv_filename)
# If you see the parsing issues error:
problems(dat)
View(dat)
#Author: Miguel Nunes
#mail: miguel.nunes@
#date: August, 2024
#Description: Accounts treatment for NOVA/ISEG/ISCTE/Católica
# Clear the environment
rm(list = ls())
#Necessary Packages
#install.packages("dplyr")
library(dplyr)
#install.packages("stringi")
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("summarytools")
library(summarytools)
#install.packages("vroom")
library(vroom)
setwd("C:/Users/Miguel Nunes/Desktop/merge/2015")
source("functions.R")
# Define a list of university names and corresponding filenames
universities <- c("nova", "catolica_lsbe", "iscte","iseg","univ_catolica","iscte_bshool")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2015/data_linkedin/temp_data'
#Clean the Profile Name and Basic corrections
##############################################
# Loop through each university
for (university in universities) {
# Construct the filenames
csv_filename <- paste0(university, "_final.csv")
output_csv_filename <- paste0("temp_",university, "_processed.csv")
output_xlsx_filename <- paste0("temp_name_corr_", university, ".xlsx")
#Check if the file exists if so erase it
if (file.exists(output_csv_filename)) {
file.remove(output_csv_filename)
}
# Set the working directory
setwd(base_dir)
# Function that processes the data: takes out ",exp" and identifies lenght=1 or "." in the name
processed <- process_data_for_correction(csv_filename)
name_corr <- processed$name_corr
data <- processed$data
# Check if 'Unnamed: 2' exists in the dataframe
if ("Unnamed: 2" %in% names(data)) {
# Remove the column if it exists
data <- data %>%
select(-`Unnamed: 2`)
}
rm(processed)
# Set the working directory to the temporary data_folder
setwd(temp_dir)
write_csv(data, output_csv_filename)
write.xlsx(name_corr, output_xlsx_filename)
rm(name_corr,data)
}
