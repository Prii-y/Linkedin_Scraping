# Clear the environment
rm(list = ls())
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
setwd("C:/Users/Miguel Nunes/Desktop/merge")
source("functions.R")
matches <- read.xlsx("compiled_matches.xlsx") %>% mutate(merge=1)
colocados <- read.xlsx("colocados_2014.xlsx") %>%
filter(str_detect(nome_curso, "Economia|Gestão|Finanças")) %>%
group_by(candidato)                                        %>%
filter(fase==min(fase))                                    %>%
ungroup()                                                  %>%
left_join(matches,by="candidato")                          %>%
filter(merge==1)
profiles <- read_csv("profiles_2014.csv")                     %>%
rename_with(~ str_replace(., "_company_name$", "_companyname"),
ends_with("_company_name"))                     %>%
rename_with(~ str_replace(., "_end_date$", "_enddate"),
ends_with("_end_date"))                         %>%
rename_with(~ str_replace(., "_start_date$", "_startdate"),
ends_with("_start_date"))   %>%
mutate(across(matches("^([1-9]|1[0-9]|2[0-9]30)_"), as.character)) %>%  # Convert to character
pivot_longer( # Pivot longer to get a row for each Category, Type(Education/Experience), Type_ID
cols = matches("^([1-9]|1[0-9]|2[0-9]|30)_"),
names_to = c("Entry", "Type", "Category"),
names_sep = "_",
values_to = "Name"
) %>% distinct(username, Type, Entry, Category, Name, .keep_all = TRUE) %>%
group_by(username,Type,Entry,Category) %>%
arrange(username,Type,Entry,Category,Name) %>%
mutate(rn=row_number()) %>% filter(rn==1) %>%
pivot_wider(  # Pivot wider to get one column for each Category
names_from = Category,
values_from = Name
)
# Clear the environment
rm(list = ls())
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
setwd("C:/Users/Miguel Nunes/Desktop/merge")
source("functions.R")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/data_linkedin/temp_data'
setwd(base_dir)
matches <- read.xlsx("compiled_matches.xlsx") %>% mutate(merge=1)
colocados <- read.xlsx("colocados_2014.xlsx") %>%
filter(str_detect(nome_curso, "Economia|Gestão|Finanças")) %>%
group_by(candidato)                                        %>%
filter(fase==min(fase))                                    %>%
ungroup()                                                  %>%
left_join(matches,by="candidato")                          %>%
filter(merge==1)
profiles <- read_csv("profiles_2014.csv")                     %>%
rename_with(~ str_replace(., "_company_name$", "_companyname"),
ends_with("_company_name"))                     %>%
rename_with(~ str_replace(., "_end_date$", "_enddate"),
ends_with("_end_date"))                         %>%
rename_with(~ str_replace(., "_start_date$", "_startdate"),
ends_with("_start_date"))   %>%
mutate(across(matches("^([1-9]|1[0-9]|2[0-9]30)_"), as.character)) %>%  # Convert to character
pivot_longer( # Pivot longer to get a row for each Category, Type(Education/Experience), Type_ID
cols = matches("^([1-9]|1[0-9]|2[0-9]|30)_"),
names_to = c("Entry", "Type", "Category"),
names_sep = "_",
values_to = "Name"
) %>% distinct(username, Type, Entry, Category, Name, .keep_all = TRUE) %>%
group_by(username,Type,Entry,Category) %>%
arrange(username,Type,Entry,Category,Name) %>%
mutate(rn=row_number()) %>% filter(rn==1) %>%
pivot_wider(  # Pivot wider to get one column for each Category
names_from = Category,
values_from = Name
)
# Clear the environment
rm(list = ls())
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
setwd("C:/Users/Miguel Nunes/Desktop/merge")
source("functions.R")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2014/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2014/data_linkedin/temp_data'
setwd(base_dir)
matches <- read.xlsx("compiled_matches.xlsx") %>% mutate(merge=1)
colocados <- read.xlsx("colocados_2014.xlsx") %>%
filter(str_detect(nome_curso, "Economia|Gestão|Finanças")) %>%
group_by(candidato)                                        %>%
filter(fase==min(fase))                                    %>%
ungroup()                                                  %>%
left_join(matches,by="candidato")                          %>%
filter(merge==1)
profiles <- read_csv("profiles_2014.csv")                     %>%
rename_with(~ str_replace(., "_company_name$", "_companyname"),
ends_with("_company_name"))                     %>%
rename_with(~ str_replace(., "_end_date$", "_enddate"),
ends_with("_end_date"))                         %>%
rename_with(~ str_replace(., "_start_date$", "_startdate"),
ends_with("_start_date"))   %>%
mutate(across(matches("^([1-9]|1[0-9]|2[0-9]30)_"), as.character)) %>%  # Convert to character
pivot_longer( # Pivot longer to get a row for each Category, Type(Education/Experience), Type_ID
cols = matches("^([1-9]|1[0-9]|2[0-9]|30)_"),
names_to = c("Entry", "Type", "Category"),
names_sep = "_",
values_to = "Name"
) %>% distinct(username, Type, Entry, Category, Name, .keep_all = TRUE) %>%
group_by(username,Type,Entry,Category) %>%
arrange(username,Type,Entry,Category,Name) %>%
mutate(rn=row_number()) %>% filter(rn==1) %>%
pivot_wider(  # Pivot wider to get one column for each Category
names_from = Category,
values_from = Name
)
View(profiles)
# Clear the environment
rm(list = ls())
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
setwd("C:/Users/Miguel Nunes/Desktop/merge/2014")
source("functions.R")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2014/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2014/data_linkedin/temp_data'
setwd(base_dir)
matches <- read.xlsx("compiled_matches.xlsx") %>% mutate(merge=1)
colocados <- read.xlsx("colocados_2014.xlsx") %>%
filter(str_detect(nome_curso, "Economia|Gestão|Finanças")) %>%
group_by(candidato)                                        %>%
filter(fase==min(fase))                                    %>%
ungroup()                                                  %>%
left_join(matches,by="candidato")                          %>%
filter(merge==1)
profiles <- read_csv("profiles_2014.csv")                     %>%
rename_with(~ str_replace(., "_company_name$", "_companyname"),
ends_with("_company_name"))                     %>%
rename_with(~ str_replace(., "_end_date$", "_enddate"),
ends_with("_end_date"))                         %>%
rename_with(~ str_replace(., "_start_date$", "_startdate"),
ends_with("_start_date"))   %>%
mutate(across(matches("^([1-9]|1[0-9]|2[0-9]30)_"), as.character)) %>%  # Convert to character
pivot_longer( # Pivot longer to get a row for each Category, Type(Education/Experience), Type_ID
cols = matches("^([1-9]|1[0-9]|2[0-9]|30)_"),
names_to = c("Entry", "Type", "Category"),
names_sep = "_",
values_to = "Name"
) %>% distinct(username, Type, Entry, Category, Name, .keep_all = TRUE) %>%
group_by(username,Type,Entry,Category) %>%
arrange(username,Type,Entry,Category,Name) %>%
mutate(rn=row_number()) %>% filter(rn==1) %>%
pivot_wider(  # Pivot wider to get one column for each Category
names_from = Category,
values_from = Name
)
data_edu <- profiles %>%
filter(Type=="education") %>%
select(-c(companyname, location, title))
data_edu <- profiles %>%
filter(Type=="education") %>%
select(-c(companyname, location, title)) %>%
mutate(missing_educ=rowSums(is.na(select(., degree:startdate))),
missing_all_educ=ifelse(missing_educ==5,1,0))
View(data_edu)
data_edu <- profiles %>%
ungroup() %>%
filter(Type=="education") %>%
select(-c(companyname, location, title)) %>%
mutate(missing_educ=rowSums(is.na(select(., degree:startdate))),
missing_all_educ=ifelse(missing_educ==5,1,0))
View(data_edu)
View(data_edu)
data_edu <- profiles %>%
ungroup() %>%
filter(Type=="education") %>%
select(-c(companyname, location, title)) %>%
mutate(missing_educ=rowSums(is.na(select(., degree:startdate))),
missing_all_educ=ifelse(missing_educ==4,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_educ = sum(missing_all_educ, na.rm = TRUE))
View(colocados)
View(data_edu)
data_edu <- profiles %>%
ungroup() %>%
filter(Type=="education") %>%
select(-c(companyname, location, title)) %>%
mutate(missing_educ=rowSums(is.na(select(., degree:startdate))),
missing_all_educ=ifelse(missing_educ==4,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_educ = sum(missing_all_educ, na.rm = TRUE)) %>% #Number of entries with missing
ungroup()
data_edu <- profiles %>%
ungroup() %>%
filter(Type=="education") %>%
select(-c(companyname, location, title)) %>%
mutate(missing_educ=rowSums(is.na(select(., degree:startdate))),
missing_all_educ=ifelse(missing_educ==4,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_educ = sum(missing_all_educ, na.rm = TRUE)) %>% #Number of entries with missing
ungroup() %>%
filter(missing_all_educ!=1)
View(data_edu)
select(., degree:startdate)
dup_data_edu <- duplicates(data_edu)
View(duplicates)
dup_data_edu <- duplicates(data_edu, select(., degree:startdate))
dup_data_edu <- duplicates(data_edu, c("usename","degree","endate","institution","startdate"))
dup_data_edu <- duplicates(data_edu, "usename","degree","endate","institution","startdate")
dup_data_edu <- duplicates(data_edu,c("usename","degree","enddate","institution","startdate"))
dup_data_edu <- duplicates(data_edu,c("username","degree","enddate","institution","startdate"))
View(dup_data_edu)
View(data_edu)
View(colocados)
View(matches)
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="education") %>%
select(-c(degree, institution))
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution))
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_educ=rowSums(is.na(select(., enddate:title))),
missing_all_educ=ifelse(missing_educ==5,1,0))
View(data_exp)
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_educ=rowSums(is.na(select(., enddate:title))),
missing_all_educ=ifelse(missing_educ==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_educ = sum(missing_all_educ, na.rm = TRUE)) %>% #Number of entries with missing
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE)) %>% #Number of entries with missing
ungroup()
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE))
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE)) %>% #Number of entries with missing
ungroup()
View(data_exp)
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE)) %>% #Number of entries with missing
ungroup() %>%
filter(total_missing_all_exp==30) %>%
distinct()
View(data_exp)
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE)) %>% #Number of entries with missing
ungroup() %>%
filter(total_missing_all_exp==30) %>%
distinct(username, .keep_all=TRUE)
View(data_exp)
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE)) %>% #Number of entries with missing
ungroup() %>%
filter(missing_all_exp!=1)
dup_data_edu <- duplicates(data_edu,c("username","title","enddate","companyname","startdate","location"))
dup_data_exp <- duplicates(data_exp,c("username","title","enddate","companyname","startdate","location"))
View(dup_data_exp)
View(dup_data_exp)
data_exp <- profiles %>%
ungroup() %>%
filter(Type=="experience") %>%
select(-c(degree, institution)) %>%
mutate(missing_exp=rowSums(is.na(select(., enddate:title))),
missing_all_exp=ifelse(missing_exp==5,1,0)) %>%
group_by(username) %>%
mutate(total_missing_all_exp = sum(missing_all_exp, na.rm = TRUE)) %>% #Number of entries with missing
ungroup() %>%
filter(missing_all_exp!=1) %>%
mutate(min=min(startdate))
View(data_exp)
View(colocados)
profiles_scraped <- profiles %>% distinct(username)
View(profiles_scraped)
profiles_scraped <- profiles %>% ungroup() %>% distinct(username)
matches <- matches %>% left_join(profiles_scraped, by="username")
tabulate(matches,"scraped")
profiles_scraped <- profiles %>% ungroup() %>% distinct(username) %>% mutate(scraped=1)
matches <- matches %>% left_join(profiles_scraped, by="username")
tabulate(matches,"scraped")
View(matches)
no_matches <- matches %>% left_join(profiles_scraped, by="username") %>% filter(is.na(scraped))
no_matches <- matches %>% left_join(profiles_scraped, by="username")
no_matches <- matches %>% left_join(profiles_scraped, by="username") %>% filter(is.na(scraped))
no_matches <- matches %>% left_join(profiles_scraped, by="username") %>% filter(scraped!=1)
no_matches <- matches %>%
left_join(profiles_scraped, by="username") %>%
filter(scraped!=1)
no_matches <- matches %>%
left_join(profiles_scraped, by="username") %>%
filter(merge!=1)
source("C:/Users/Miguel Nunes/Desktop/merge/2014/6. Data_Cleaning_Post.R", echo=TRUE)
View(no_matches)
no_matches <- matches %>%
left_join(profiles_scraped, by="username") %>%
filter(is.na(scraped))
View(no_matches)
# Clear the environment
rm(list = ls())
library(stringi)
#install.packages("readr")
library(readr)
#install.packages("openxlsx")
library(openxlsx)
#install.packages("tools")
library(tools)
#install.packages("mclust")
library(mclust)
#install.packages("tidyverse")
library(tidyverse)
#install.packages("RColorBrewer")
library(RColorBrewer)
setwd("C:/Users/Miguel Nunes/Desktop/merge/2014")
source("functions.R")
# Define the raw data directory
base_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2014/data_linkedin'
# Define the temporary data directory
temp_dir <- 'C:/Users/Miguel Nunes/Desktop/merge/2014/data_linkedin/temp_data'
setwd(base_dir)
matches <- read.xlsx("compiled_matches.xlsx") %>% mutate(merge=1)
colocados <- read.xlsx("colocados_2014.xlsx")
source("C:/Users/Miguel Nunes/Desktop/merge/2014/6. Data_Cleaning_Post.R", echo=TRUE)
View(no_matches)
View(colocados)
colocados <- read.xlsx("colocados_2014.xlsx")
View(colocados)
